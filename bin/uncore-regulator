#!/usr/bin/env python3

import argparse
import logging

from uncore_regulator.daemon import Daemon
from itertools import chain


def parse_range_list(rl):
    def parse_range(r):
        if len(r) == 0:
            return []
        parts = r.split("-")
        if len(parts) > 2:
            raise ValueError("Invalid range: {}".format(r))
        return range(int(parts[0]), int(parts[-1]) + 1)

    return set(chain.from_iterable(map(parse_range, rl.split(","))))


parser = argparse.ArgumentParser()
parser.add_argument("-o",
                    "--logfile",
                    type=str,
                    help="Output file. If none is given, nothing is output.")
parser.add_argument("cores",
                    type=str,
                    help="comma-separated list of physical core ids.")
parser.add_argument("sockets",
                    type=str,
                    help="comma-separated list of physical sockets ids.")
parser.add_argument("-r",
                    "--regulator",
                    type=str,
                    help="Regulator to use (default: none)")
args = parser.parse_args()

cores = parse_range_list(args.cores)
sockets = parse_range_list(args.sockets)

logging.basicConfig(level=logging.DEBUG)

d = Daemon(cores=cores, sockets=sockets, logfile=args.logfile, regulator=args.regulator)
d.run()
